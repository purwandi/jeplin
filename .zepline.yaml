image: alpine:latest

docker:
  registry: https://ghcr.io
  credential: github-credentials

stages:
  - prepare
  - build
  - release
  - post

include:
  - remote: 'https://github.com/purwandi/zepline-test.git'
    credential: github-credentials
    ref: main
    files: 
      - /helm.yaml

variables:
  DOCKER_REGISTRY: ghcr.io
  # DOCKER_TLS_CERTDIR: $WORKSPACE/.certs
  # DOCKER_TLS_VERIFY: true
  # DOCKER_DRIVER: overlay2 
  # DOCKER_HOST: "tcp://docker:2376"

tasks:
  # release:
  #   image: alpine:3.13
  #   stage: release
  #   script: 
  #     - echo "hello from alpine 3.13"
  #     - sleep 10

  notification:
    image: alpine
    stage: prepare
    script:
      - echo "hello notification"
      - sleep 15

  docker:
    image: docker
    stage: build
    credentials:
      - credential: github-credentials
        type: usernamePassword
        variables:
          username: GITHUB_USERNAME
          password: GITHUB_PASSWORD
    script:
      - ls -all
      - env
      - echo $GITHUB_USERNAME
      - echo $GITHUB_PASSWORD

  # helm:
  #   image: alpine
  #   extends: .helm
  #   credentials:
  #     - credential: github-credentials
  #       type: usernamePassword
  #       variables:
  #         username: GITHUB_USERNAME
  #         password: GITHUB_PASSWORD
  #     # - credential: github-credentials
  #     #   type: usernameColonPassword
  #     #   variables:
  #     #     variable: GITHUB_TOKEN
  #     # - credential: file-secret
  #     #   type: file
  #     #   variables:
  #     #     variable: FILE_SECRET
  #     # - credential: secret-text
  #     #   type: string
  #     #   variables:
  #     #     variable: FILE_SECRET
  #   stage: build
  #   services:
  #     - image: nginx:alpine
  #       alias: web
  #       # entrypoint: 
  #       # command: 
  #   script:
  #     - echo $GITHUB_USERNAME
  #     - echo $GITHUB_PASSWORD
  #     - sleep 10

  # helm:
  #   extends: .helm
  #   stage: release
  #   variables:
  #     ENV: prod